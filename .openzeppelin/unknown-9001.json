{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xD724ED0DC27D8E5364ae786dD562C04644dD3c1C",
    "txHash": "0xc809c57dbf7e6d0ddb6e5308c58d9ce67110ddd753537c5f2f175e7ed71d3260"
  },
  "proxies": [
    {
      "address": "0x469EF10604015A07dD4CBca3Ff5baeb80B41bfF4",
      "txHash": "0xa9b1dcb99e6cbae335690ca07b2cf5d018365c1da3f5a9b8cff276f7a2cbdb41",
      "kind": "transparent"
    },
    {
      "address": "0xeB13EBE7613f9FC03A4ac091574Dc04ceb45562f",
      "txHash": "0x61eb8e0e65d557cd22e56ac780ad576ea7dc16bad753f4f064ba61b627cf503a",
      "kind": "transparent"
    },
    {
      "address": "0x64Fd2411C9b6c0d2F6F70dAA77Bac63E93D6AB2B",
      "txHash": "0x32a68caad1585701fd0b179cdd91a8eb6d58bdb2e4a87d457c38909029f8a00e",
      "kind": "transparent"
    },
    {
      "address": "0xA65d12De252c60EBD251b3aE45d6029e9eBCA5E7",
      "txHash": "0x3645713b4499b10b7a4648924633fe996be4b74a2c2d841779efaf1a52b28365",
      "kind": "transparent"
    },
    {
      "address": "0x905bD3941F089F901Ead2fB54F8B39755C7F92Cc",
      "txHash": "0x6786d652662ee0aef008aa8498312a9649205b38181ae2916a025bba1b65148d",
      "kind": "transparent"
    },
    {
      "address": "0x413Bd9f0615847c094c49B17AAe07e6cA671D5E6",
      "txHash": "0xb0fe14b628ec5e5f31b795627b6be2f87e1f04a33e7ad99302914cd74b64a5c1",
      "kind": "transparent"
    },
    {
      "address": "0xe5E0b74752D72d2937A558Ad674980b84697645F",
      "txHash": "0xc41e75657592d38f029f4004765970c0ea3dd65e86765ebf3a9eb09421bb43b1",
      "kind": "transparent"
    },
    {
      "address": "0xe8b4Dc8520270916c1E53964403c0f0Db4e32ebe",
      "txHash": "0x8056f9ebd68d2a871a0cf2aded2c6d9df9c614923dafb391bbf78a39870db1d9",
      "kind": "transparent"
    },
    {
      "address": "0x95e0dB7ea8721e103b91bf9202db586F77d58937",
      "txHash": "0x01404b9835b2a66705cbb30435cd7686ad6522d5988bda0791f26ae80fa58c64",
      "kind": "transparent"
    },
    {
      "address": "0xc7Cf78140dB84bB3a82eE5A73024bCc8d168cBf5",
      "txHash": "0x3f42a30e8f4dbf3e20cb0705a7bf3b958c0a0a583cfe12666e4217ac2e4057f1",
      "kind": "transparent"
    },
    {
      "address": "0xeBf0DAd2f75f8f61D504a13E5324534d88eCE087",
      "txHash": "0x5aca3cded955cc73622fada5571678573457c564e9b2049a6c5c2fbc8fad1a1e",
      "kind": "transparent"
    },
    {
      "address": "0x67B5804374Bd1b9e947a106467A794D4A0e54B6A",
      "txHash": "0x5204de2b9212504e7e46bc6047b0e1d2eff08bda310d7a1961852fd6241552fe",
      "kind": "transparent"
    },
    {
      "address": "0x0fC7Eeef83Dd2682d9Ad829F6250dfaa924BDB15",
      "txHash": "0x667b716174ead35f0e6ae1179cb8a4c083e486eb91fcbc82104a16c57cadb362",
      "kind": "transparent"
    },
    {
      "address": "0xA54FFe973c54fAF98432EF410A53Ec6fDA6287E2",
      "txHash": "0x92559209212820ec6997578d9efab2b0527a706ecbc3e64af2d39508c266dc0e",
      "kind": "transparent"
    },
    {
      "address": "0xE9B546ae1a6B741B7A33aadD1ae9EAebb992acd0",
      "txHash": "0x6073b54e457b34df6a7ebd7835f9a169492c9fee05450b737ecedd43ef344274",
      "kind": "transparent"
    },
    {
      "address": "0x702cfb411afE14C3aF15f8CcE5fB98DEd79b8824",
      "txHash": "0x46da1730ba16d5520e6343d96fb669b9a836203e86399a2f5f2cbc5eb962beaf",
      "kind": "transparent"
    },
    {
      "address": "0x29c69F611bd84689BB636b44e6563e955AdB6E6d",
      "txHash": "0x1a0d62b28f0f5a0a72c5b25f8c2f342db9d56f5b83ba9fe42eebdebfa1cfa716",
      "kind": "transparent"
    },
    {
      "address": "0x40E749571A6AB56F93C3eec5B54767Ab2FB08FF9",
      "txHash": "0x172f2c5cd51c273088cb734f68dd24d11607e58aef6418d09bf3cc4faa632bd6",
      "kind": "transparent"
    },
    {
      "address": "0x3E5AD6F68CF4C23a806C4Df6Cd9ff934cba07343",
      "txHash": "0x4bd34c73497a23accf4b6685aa81e7d6206dbbacf86378e92346dd805a7d4951",
      "kind": "transparent"
    },
    {
      "address": "0x2C809cc9e81242AF11F294a23E56560bE5fD67B9",
      "txHash": "0x56f5d8a9347f1ab42921dfdb6394af8cc3e12653bdcd29280a8d7cfae198219f",
      "kind": "transparent"
    },
    {
      "address": "0x3D2b7892B7C0486d7C16Bd379326b04781961D39",
      "txHash": "0x8d9a3764fb203d7d5d4fee82b368c897e8f7afdbb82230cf20fc86d9d1a7c8ec",
      "kind": "transparent"
    },
    {
      "address": "0x7ba9A44b2d53C54fF7e7e04ba906BFAE6ece9cAC",
      "txHash": "0xb9b30563f91b5b8607af8e2c82496e06aaa1050b5273aae3b24f72ecc5352cf8",
      "kind": "transparent"
    },
    {
      "address": "0x9B36748147AbB2D6bb3469d70dfDF3888cA722F0",
      "txHash": "0xdb4067a3e5fb4e1e98b882086b88eb67d42ca955d4c647c71e55defd137f1826",
      "kind": "transparent"
    }
  ],
  "impls": {
    "15f0f34f146fd9b6570e244ff091cd54d33ef1a12dedc53c075f3bfef7b24e85": {
      "address": "0x383f9F442011496C2555084BbA160182B77a8A19",
      "txHash": "0x890c490499253c57e4ccccf906eafc785491eea676451f9ed49e88f1cf69150e",
      "layout": {
        "storage": [
          {
            "label": "_shareholderRegistry",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IShareholderRegistry)4423",
            "contract": "VotingBase",
            "src": "contracts/Voting/VotingBase.sol:9"
          },
          {
            "label": "_token",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20Upgradeable)1252",
            "contract": "VotingBase",
            "src": "contracts/Voting/VotingBase.sol:10"
          },
          {
            "label": "_contributorRole",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32",
            "contract": "VotingBase",
            "src": "contracts/Voting/VotingBase.sol:12"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_address)",
            "contract": "VotingBase",
            "src": "contracts/Voting/VotingBase.sol:15"
          },
          {
            "label": "_votingPower",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VotingBase",
            "src": "contracts/Voting/VotingBase.sol:16"
          },
          {
            "label": "_delegators",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VotingBase",
            "src": "contracts/Voting/VotingBase.sol:17"
          },
          {
            "label": "_totalVotingPower",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "VotingBase",
            "src": "contracts/Voting/VotingBase.sol:19"
          },
          {
            "label": "_currentSnapshotId",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "Snapshottable",
            "src": "contracts/extensions/Snapshottable.sol:11"
          },
          {
            "label": "_delegationSnapshots",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_struct(SnapshotsDelegates)7229_storage)",
            "contract": "VotingSnapshot",
            "src": "contracts/Voting/VotingSnapshot.sol:21"
          },
          {
            "label": "_votingPowerSnapshots",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_struct(SnapshotsValues)7236_storage)",
            "contract": "VotingSnapshot",
            "src": "contracts/Voting/VotingSnapshot.sol:22"
          },
          {
            "label": "_totalVotingPowerSnapshots",
            "offset": 0,
            "slot": "10",
            "type": "t_struct(SnapshotsValues)7236_storage",
            "contract": "VotingSnapshot",
            "src": "contracts/Voting/VotingSnapshot.sol:23"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1864_storage)",
            "contract": "AccessControl",
            "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "13",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "13",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)1252": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IShareholderRegistry)4423": {
            "label": "contract IShareholderRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(SnapshotsDelegates)7229_storage)": {
            "label": "mapping(address => struct VotingSnapshot.SnapshotsDelegates)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(SnapshotsValues)7236_storage)": {
            "label": "mapping(address => struct VotingSnapshot.SnapshotsValues)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1864_storage)": {
            "label": "mapping(bytes32 => struct AccessControl.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1864_storage": {
            "label": "struct AccessControl.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(SnapshotsDelegates)7229_storage": {
            "label": "struct VotingSnapshot.SnapshotsDelegates",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "delegates",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(SnapshotsValues)7236_storage": {
            "label": "struct VotingSnapshot.SnapshotsValues",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5bc68e5a9e41e37ad9130fcf9ae5dd4c79f361145419e199592fdde7253ffac1": {
      "address": "0x295a147C13951c9C9b0270355Bf580D8Dd1EEDb0",
      "txHash": "0x683411e2fb4681184c8772a508d884aac49b476601fd24fc00fb8dd5cdbe0ed2",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "SHAREHOLDER_STATUS",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "ShareholderRegistryBase",
            "src": "contracts/ShareholderRegistry/ShareholderRegistryBase.sol:12"
          },
          {
            "label": "INVESTOR_STATUS",
            "offset": 0,
            "slot": "102",
            "type": "t_bytes32",
            "contract": "ShareholderRegistryBase",
            "src": "contracts/ShareholderRegistry/ShareholderRegistryBase.sol:13"
          },
          {
            "label": "CONTRIBUTOR_STATUS",
            "offset": 0,
            "slot": "103",
            "type": "t_bytes32",
            "contract": "ShareholderRegistryBase",
            "src": "contracts/ShareholderRegistry/ShareholderRegistryBase.sol:14"
          },
          {
            "label": "MANAGING_BOARD_STATUS",
            "offset": 0,
            "slot": "104",
            "type": "t_bytes32",
            "contract": "ShareholderRegistryBase",
            "src": "contracts/ShareholderRegistry/ShareholderRegistryBase.sol:15"
          },
          {
            "label": "_voting",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(IVoting)6579",
            "contract": "ShareholderRegistryBase",
            "src": "contracts/ShareholderRegistry/ShareholderRegistryBase.sol:17"
          },
          {
            "label": "_statuses",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "ShareholderRegistryBase",
            "src": "contracts/ShareholderRegistry/ShareholderRegistryBase.sol:25"
          },
          {
            "label": "_currentSnapshotId",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "Snapshottable",
            "src": "contracts/extensions/Snapshottable.sol:11"
          },
          {
            "label": "_totalSupplySnapshots",
            "offset": 0,
            "slot": "108",
            "type": "t_struct(TotalSupplySnapshots)5007_storage",
            "contract": "ShareholderRegistrySnapshot",
            "src": "contracts/ShareholderRegistry/ShareholderRegistrySnapshot.sol:18"
          },
          {
            "label": "_accountStatusAndBalanceSnapshots",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_address,t_struct(StatusAndBalanceSnapshots)5023_storage)",
            "contract": "ShareholderRegistrySnapshot",
            "src": "contracts/ShareholderRegistry/ShareholderRegistrySnapshot.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "111",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "162",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StatusAndBalance)5015_storage)dyn_storage": {
            "label": "struct ShareholderRegistrySnapshot.StatusAndBalance[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IVoting)6579": {
            "label": "contract IVoting",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(StatusAndBalanceSnapshots)5023_storage)": {
            "label": "mapping(address => struct ShareholderRegistrySnapshot.StatusAndBalanceSnapshots)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StatusAndBalance)5015_storage": {
            "label": "struct ShareholderRegistrySnapshot.StatusAndBalance",
            "members": [
              {
                "label": "status",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StatusAndBalanceSnapshots)5023_storage": {
            "label": "struct ShareholderRegistrySnapshot.StatusAndBalanceSnapshots",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "values",
                "type": "t_array(t_struct(StatusAndBalance)5015_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TotalSupplySnapshots)5007_storage": {
            "label": "struct ShareholderRegistrySnapshot.TotalSupplySnapshots",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d2e70c0a141813a5c7ae378871e908f156c9219005fc86e4cd04b360f3c2b093": {
      "address": "0x0B63681e44524Ebc7632aA86DF31094ad0C6c002",
      "txHash": "0x696223e850502987f67a8b18234491bac7fd466ed7c9e45fb246b90d80914bb4",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_voting",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IVoting)6579",
            "contract": "NeokingdomTokenBase",
            "src": "contracts/NeokingdomToken/NeokingdomTokenBase.sol:10"
          },
          {
            "label": "_shareholderRegistry",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IShareholderRegistry)4423",
            "contract": "NeokingdomTokenBase",
            "src": "contracts/NeokingdomToken/NeokingdomTokenBase.sol:11"
          },
          {
            "label": "_vestingBalance",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NeokingdomTokenBase",
            "src": "contracts/NeokingdomToken/NeokingdomTokenBase.sol:56"
          },
          {
            "label": "_unlockedBalance",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NeokingdomTokenBase",
            "src": "contracts/NeokingdomToken/NeokingdomTokenBase.sol:57"
          },
          {
            "label": "_offers",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_struct(Offers)5592_storage)",
            "contract": "NeokingdomTokenBase",
            "src": "contracts/NeokingdomToken/NeokingdomTokenBase.sol:58"
          },
          {
            "label": "_currentSnapshotId",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "Snapshottable",
            "src": "contracts/extensions/Snapshottable.sol:11"
          },
          {
            "label": "_accountBalanceSnapshots",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_struct(Snapshots)6270_storage)",
            "contract": "NeokingdomTokenSnapshot",
            "src": "contracts/NeokingdomToken/NeokingdomTokenSnapshot.sol:17"
          },
          {
            "label": "_totalSupplySnapshots",
            "offset": 0,
            "slot": "108",
            "type": "t_struct(Snapshots)6270_storage",
            "contract": "NeokingdomTokenSnapshot",
            "src": "contracts/NeokingdomToken/NeokingdomTokenSnapshot.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "110",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "161",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IShareholderRegistry)4423": {
            "label": "contract IShareholderRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IVoting)6579": {
            "label": "contract IVoting",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Offers)5592_storage)": {
            "label": "mapping(address => struct NeokingdomTokenBase.Offers)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Snapshots)6270_storage)": {
            "label": "mapping(address => struct NeokingdomTokenSnapshot.Snapshots)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint128,t_struct(Offer)5582_storage)": {
            "label": "mapping(uint128 => struct NeokingdomTokenBase.Offer)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Offer)5582_storage": {
            "label": "struct NeokingdomTokenBase.Offer",
            "members": [
              {
                "label": "expiration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Offers)5592_storage": {
            "label": "struct NeokingdomTokenBase.Offers",
            "members": [
              {
                "label": "start",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "offer",
                "type": "t_mapping(t_uint128,t_struct(Offer)5582_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Snapshots)6270_storage": {
            "label": "struct NeokingdomTokenSnapshot.Snapshots",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2a43058ed77348095a30d23c016f2176336d660d811c4ac4e7311d3ef48cf096": {
      "address": "0xA0497e979A05E2C3238A50854409Ad3E1487eda3",
      "txHash": "0xe8c56fe74de089acbed7873880c39a699e54591fb572f7489c0cad8cf4b976f9",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1864_storage)",
            "contract": "AccessControl",
            "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
          },
          {
            "label": "_currentResolutionId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "ResolutionManager",
            "src": "contracts/ResolutionManager/ResolutionManager.sol:15"
          },
          {
            "label": "_shareholderRegistry",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IShareholderRegistry)4423",
            "contract": "ResolutionManager",
            "src": "contracts/ResolutionManager/ResolutionManager.sol:17"
          },
          {
            "label": "_neokingdomToken",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(INeokingdomToken)5369",
            "contract": "ResolutionManager",
            "src": "contracts/ResolutionManager/ResolutionManager.sol:18"
          },
          {
            "label": "_voting",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IVoting)6579",
            "contract": "ResolutionManager",
            "src": "contracts/ResolutionManager/ResolutionManager.sol:19"
          },
          {
            "label": "resolutionTypes",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_struct(ResolutionType)3202_storage)dyn_storage",
            "contract": "ResolutionManager",
            "src": "contracts/ResolutionManager/ResolutionManager.sol:60"
          },
          {
            "label": "resolutions",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(Resolution)3241_storage)",
            "contract": "ResolutionManager",
            "src": "contracts/ResolutionManager/ResolutionManager.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ResolutionType)3202_storage)dyn_storage": {
            "label": "struct ResolutionManager.ResolutionType[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IShareholderRegistry)4423": {
            "label": "contract IShareholderRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(INeokingdomToken)5369": {
            "label": "contract INeokingdomToken",
            "numberOfBytes": "20"
          },
          "t_contract(IVoting)6579": {
            "label": "contract IVoting",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1864_storage)": {
            "label": "mapping(bytes32 => struct AccessControl.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Resolution)3241_storage)": {
            "label": "mapping(uint256 => struct ResolutionManager.Resolution)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Resolution)3241_storage": {
            "label": "struct ResolutionManager.Resolution",
            "members": [
              {
                "label": "dataURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "resolutionTypeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "approveTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "snapshotId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "yesVotesTotal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isNegative",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "rejectionTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "executionTo",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionData",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executionTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "hasVotedYes",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "lostVotingPower",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(ResolutionType)3202_storage": {
            "label": "struct ResolutionManager.ResolutionType",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "noticePeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "votingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "canBeNegative",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RoleData)1864_storage": {
            "label": "struct AccessControl.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "795949262b4442ec099c0f59a65dc2c3de6c614735cdb30a330374f0d2bec527": {
      "address": "0x9B1a5CbF80791393171f1E07E944dA40F7C65F71",
      "txHash": "0x9bdb34c7376a29d815aff1d869abc6840ea3f7048b8c073e42faace071eae6f1",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cd326b44507671f1e310e93f2feeddb667598eb60e75741ed8b22f51a2e54c72": {
      "address": "0x71f50eAb375f6e08A273D9a5e840aEBC89dEca1C",
      "txHash": "0x1a659260c2b81ee74b2b2490a133383a907579b39a971a3d78a223791497a626",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "63d90a07209c41736d30571f7af82a08c2a775753cedfbb4c98c8925449aebc1": {
      "address": "0x01cD0bD90fE5f7a10FCf4cB219538f4b2d0Ee4e0",
      "txHash": "0xed03827cbdc6939774f8e3eb918db5e6cd980b18983f377395f4207c5e5e79d1",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "daoToken",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IERC20)3768",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:30"
          },
          {
            "label": "exchangeToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)3768",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:31"
          },
          {
            "label": "redemptionController",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IRedemptionController)7202",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:33"
          },
          {
            "label": "priceOracle",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IStdReference)6930",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:34"
          },
          {
            "label": "reserve",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:36"
          },
          {
            "label": "offerDuration",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:37"
          },
          {
            "label": "_offers",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(Offers)5301_storage)",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:39"
          },
          {
            "label": "_vaultContributors",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "58",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "109",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3768": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionController)7202": {
            "label": "contract IRedemptionController",
            "numberOfBytes": "20"
          },
          "t_contract(IStdReference)6930": {
            "label": "contract IStdReference",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Offers)5301_storage)": {
            "label": "mapping(address => struct InternalMarketBase.Offers)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint128,t_struct(Offer)5291_storage)": {
            "label": "mapping(uint128 => struct InternalMarketBase.Offer)",
            "numberOfBytes": "32"
          },
          "t_struct(Offer)5291_storage": {
            "label": "struct InternalMarketBase.Offer",
            "members": [
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Offers)5301_storage": {
            "label": "struct InternalMarketBase.Offers",
            "members": [
              {
                "label": "start",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "offer",
                "type": "t_mapping(t_uint128,t_struct(Offer)5291_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6a39a044811648a400265ed0377046856557d43b88487bdc02fcb2fadeb33ec6": {
      "address": "0x167505791d5acB78AE7a9fF2EaE7357457d59dcB",
      "txHash": "0xdeb1a9db2d1d616b04705bb48b52e16adbb17e99e0a3dd093bd05e878decba35",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "daoToken",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IERC20)3768",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:30"
          },
          {
            "label": "exchangeToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)3768",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:31"
          },
          {
            "label": "redemptionController",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IRedemptionController)7195",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:33"
          },
          {
            "label": "priceOracle",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IStdReference)6923",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:34"
          },
          {
            "label": "reserve",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:36"
          },
          {
            "label": "offerDuration",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:37"
          },
          {
            "label": "_offers",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(Offers)5301_storage)",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:39"
          },
          {
            "label": "_vaultContributors",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "58",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "109",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3768": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionController)7195": {
            "label": "contract IRedemptionController",
            "numberOfBytes": "20"
          },
          "t_contract(IStdReference)6923": {
            "label": "contract IStdReference",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Offers)5301_storage)": {
            "label": "mapping(address => struct InternalMarketBase.Offers)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint128,t_struct(Offer)5291_storage)": {
            "label": "mapping(uint128 => struct InternalMarketBase.Offer)",
            "numberOfBytes": "32"
          },
          "t_struct(Offer)5291_storage": {
            "label": "struct InternalMarketBase.Offer",
            "members": [
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Offers)5301_storage": {
            "label": "struct InternalMarketBase.Offers",
            "members": [
              {
                "label": "start",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "offer",
                "type": "t_mapping(t_uint128,t_struct(Offer)5291_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ae20310985f74c77f757776943472e9d85e843f4a3bb5e508b015bffe831fa7f": {
      "address": "0x2Aa26FF2F7D2f81440b1234089bC30660A4A5f1f",
      "txHash": "0xf7545527e051b1eb0a8ed53a69792cacec94d65dfec9ca3db1658415549f6874",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "daoToken",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IERC20)3768",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:30"
          },
          {
            "label": "exchangeToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)3768",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:31"
          },
          {
            "label": "redemptionController",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IRedemptionController)7195",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:33"
          },
          {
            "label": "priceOracle",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IStdReference)6923",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:34"
          },
          {
            "label": "reserve",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:36"
          },
          {
            "label": "offerDuration",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:37"
          },
          {
            "label": "_offers",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(Offers)5301_storage)",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:39"
          },
          {
            "label": "_vaultContributors",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "58",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "109",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3768": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionController)7195": {
            "label": "contract IRedemptionController",
            "numberOfBytes": "20"
          },
          "t_contract(IStdReference)6923": {
            "label": "contract IStdReference",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Offers)5301_storage)": {
            "label": "mapping(address => struct InternalMarketBase.Offers)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint128,t_struct(Offer)5291_storage)": {
            "label": "mapping(uint128 => struct InternalMarketBase.Offer)",
            "numberOfBytes": "32"
          },
          "t_struct(Offer)5291_storage": {
            "label": "struct InternalMarketBase.Offer",
            "members": [
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Offers)5301_storage": {
            "label": "struct InternalMarketBase.Offers",
            "members": [
              {
                "label": "start",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "offer",
                "type": "t_mapping(t_uint128,t_struct(Offer)5291_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9ac1886a1eb9a2c0b1ac5d4383b8da271465973892abc3ed0418faa7f738fc20": {
      "address": "0x19e699ce2C693F39ecDD8dC771Bfa5f45DC8B408",
      "txHash": "0xf0726b1d65dfead83d0728ee3902bed7823ef4ef2b4ceee656f979a5faf02141",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "daoToken",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IERC20)3768",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:30"
          },
          {
            "label": "exchangeToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(ERC20)3690",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:31"
          },
          {
            "label": "redemptionController",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IRedemptionController)7205",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:33"
          },
          {
            "label": "priceOracle",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IStdReference)6933",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:34"
          },
          {
            "label": "reserve",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:36"
          },
          {
            "label": "offerDuration",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:37"
          },
          {
            "label": "_offers",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(Offers)5301_storage)",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:39"
          },
          {
            "label": "_vaultContributors",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "58",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "109",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ERC20)3690": {
            "label": "contract ERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)3768": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionController)7205": {
            "label": "contract IRedemptionController",
            "numberOfBytes": "20"
          },
          "t_contract(IStdReference)6933": {
            "label": "contract IStdReference",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Offers)5301_storage)": {
            "label": "mapping(address => struct InternalMarketBase.Offers)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint128,t_struct(Offer)5291_storage)": {
            "label": "mapping(uint128 => struct InternalMarketBase.Offer)",
            "numberOfBytes": "32"
          },
          "t_struct(Offer)5291_storage": {
            "label": "struct InternalMarketBase.Offer",
            "members": [
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Offers)5301_storage": {
            "label": "struct InternalMarketBase.Offers",
            "members": [
              {
                "label": "start",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "offer",
                "type": "t_mapping(t_uint128,t_struct(Offer)5291_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1552d66891c19136a466450691598079dd47f8f67f6506a4a0d8c3fc83c2ccfa": {
      "address": "0x151dEbF0CA1900b94F1b711DfD38Cf87fcDdA041",
      "txHash": "0x1deae47dc6bee4d756c37f2cbb70de0ea3ec366db84949586bda77306223058e",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "daoToken",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IERC20)3768",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:33"
          },
          {
            "label": "exchangeToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(ERC20)3690",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:34"
          },
          {
            "label": "redemptionController",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IRedemptionController)7222",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:36"
          },
          {
            "label": "priceOracle",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IStdReference)6950",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:37"
          },
          {
            "label": "reserve",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:39"
          },
          {
            "label": "offerDuration",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:40"
          },
          {
            "label": "_offers",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(Offers)5305_storage)",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:42"
          },
          {
            "label": "_vaultContributors",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "58",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "109",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ERC20)3690": {
            "label": "contract ERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)3768": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionController)7222": {
            "label": "contract IRedemptionController",
            "numberOfBytes": "20"
          },
          "t_contract(IStdReference)6950": {
            "label": "contract IStdReference",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Offers)5305_storage)": {
            "label": "mapping(address => struct InternalMarketBase.Offers)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint128,t_struct(Offer)5295_storage)": {
            "label": "mapping(uint128 => struct InternalMarketBase.Offer)",
            "numberOfBytes": "32"
          },
          "t_struct(Offer)5295_storage": {
            "label": "struct InternalMarketBase.Offer",
            "members": [
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Offers)5305_storage": {
            "label": "struct InternalMarketBase.Offers",
            "members": [
              {
                "label": "start",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "offer",
                "type": "t_mapping(t_uint128,t_struct(Offer)5295_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f3c34374660e87964a09d66469283449c6624f5140e762322c9c0584a70c9b99": {
      "address": "0x01FB7BdaD440A0622Db5829dfD86Aac4579176D6",
      "txHash": "0xef8000bcc3fc42d43402186a3f428aa1f5db2aa392d0b034b724a8b61d9e2090",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "daoToken",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IERC20)3768",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:33"
          },
          {
            "label": "exchangeToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(ERC20)3690",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:34"
          },
          {
            "label": "redemptionController",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IRedemptionController)7236",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:36"
          },
          {
            "label": "priceOracle",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IStdReference)6964",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:37"
          },
          {
            "label": "reserve",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:39"
          },
          {
            "label": "offerDuration",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:40"
          },
          {
            "label": "_offers",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(Offers)5305_storage)",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:42"
          },
          {
            "label": "_vaultContributors",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "58",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "109",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ERC20)3690": {
            "label": "contract ERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)3768": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionController)7236": {
            "label": "contract IRedemptionController",
            "numberOfBytes": "20"
          },
          "t_contract(IStdReference)6964": {
            "label": "contract IStdReference",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Offers)5305_storage)": {
            "label": "mapping(address => struct InternalMarketBase.Offers)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint128,t_struct(Offer)5295_storage)": {
            "label": "mapping(uint128 => struct InternalMarketBase.Offer)",
            "numberOfBytes": "32"
          },
          "t_struct(Offer)5295_storage": {
            "label": "struct InternalMarketBase.Offer",
            "members": [
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Offers)5305_storage": {
            "label": "struct InternalMarketBase.Offers",
            "members": [
              {
                "label": "start",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "offer",
                "type": "t_mapping(t_uint128,t_struct(Offer)5295_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0993c84edac157c98d3404ffe2de33c4c21c25b04b5b6719a952e251dddb8885": {
      "address": "0xD9ed97c2A9226bB9CAdE24A44898AdA4C8D04aB4",
      "txHash": "0xec37e3a6c4d6a479b368c5fba2ebccde39b7c5341bc083c6090a9f74d46ca2dd",
      "layout": {
        "solcVersion": "0.8.16",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "daoToken",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IERC20)3768",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:33"
          },
          {
            "label": "exchangeToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(ERC20)3690",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:34"
          },
          {
            "label": "redemptionController",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IRedemptionController)7236",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:36"
          },
          {
            "label": "priceOracle",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IStdReference)6964",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:37"
          },
          {
            "label": "reserve",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:39"
          },
          {
            "label": "offerDuration",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:40"
          },
          {
            "label": "_offers",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_struct(Offers)5305_storage)",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:42"
          },
          {
            "label": "_vaultContributors",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "InternalMarketBase",
            "src": "contracts/InternalMarket/InternalMarketBase.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "58",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "109",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ERC20)3690": {
            "label": "contract ERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)3768": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IRedemptionController)7236": {
            "label": "contract IRedemptionController",
            "numberOfBytes": "20"
          },
          "t_contract(IStdReference)6964": {
            "label": "contract IStdReference",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Offers)5305_storage)": {
            "label": "mapping(address => struct InternalMarketBase.Offers)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint128,t_struct(Offer)5295_storage)": {
            "label": "mapping(uint128 => struct InternalMarketBase.Offer)",
            "numberOfBytes": "32"
          },
          "t_struct(Offer)5295_storage": {
            "label": "struct InternalMarketBase.Offer",
            "members": [
              {
                "label": "expiredAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Offers)5305_storage": {
            "label": "struct InternalMarketBase.Offers",
            "members": [
              {
                "label": "start",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "end",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "offer",
                "type": "t_mapping(t_uint128,t_struct(Offer)5295_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
